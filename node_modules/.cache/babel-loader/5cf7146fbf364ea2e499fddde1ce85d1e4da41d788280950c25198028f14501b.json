{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\medical-records\\\\src\\\\Registration.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"registration-form\",\n      onSubmit: handleRegistration,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"patient-details\",\n        children: \"Patient Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"patient-details\",\n        name: \"patient-details\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = Registration;\nasync function handleRegistration(event) {\n  event.preventDefault();\n  const name = document.getElementById('name').value;\n  const email = document.getElementById('email').value;\n  const password = document.getElementById('password').value;\n  const patientDetails = document.getElementById('patient-details').value;\n  try {\n    const response = await fetch('http://localhost:5000/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        patientDetails\n      })\n    });\n    const data = await response.json();\n    console.log('Registration successful:', data);\n  } catch (error) {\n    console.error('Registration failed:', error);\n  }\n}\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Registration","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","handleRegistration","htmlFor","type","name","required","_c","event","preventDefault","document","getElementById","value","email","password","patientDetails","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","$RefreshReg$"],"sources":["C:/Users/User/medical-records/src/Registration.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Registration() {\r\n    return (\r\n        <div>\r\n            <h1>Doctor Registration</h1>\r\n            <form id=\"registration-form\" onSubmit={handleRegistration}>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" required />\r\n                \r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\" id=\"email\" name=\"email\" required />\r\n                \r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" required />\r\n                \r\n                <label htmlFor=\"patient-details\">Patient Details:</label>\r\n                <textarea id=\"patient-details\" name=\"patient-details\" required></textarea>\r\n                \r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function handleRegistration(event) {\r\n    event.preventDefault();\r\n    const name = document.getElementById('name').value;\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    const patientDetails = document.getElementById('patient-details').value;\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:5000/api/register', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, email, password, patientDetails }),\r\n        });\r\n        const data = await response.json();\r\n        console.log('Registration successful:', data);\r\n    } catch (error) {\r\n        console.error('Registration failed:', error);\r\n    }\r\n}\r\n\r\nexport default Registration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}