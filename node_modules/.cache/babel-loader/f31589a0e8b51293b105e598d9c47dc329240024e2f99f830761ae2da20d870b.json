{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\medical-records\\\\src\\\\Login.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = Login;\nasync function handleLogin(event) {\n  event.preventDefault();\n  const email = document.getElementById('email').value;\n  const password = document.getElementById('password').value;\n  try {\n    const response = await fetch('http://localhost:5000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    console.log('Login successful:', data);\n  } catch (error) {\n    console.error('Login failed:', error);\n  }\n}\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Login","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","handleLogin","htmlFor","type","name","required","_c","event","preventDefault","email","document","getElementById","value","password","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","$RefreshReg$"],"sources":["C:/Users/User/medical-records/src/Login.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n            <h1>Patient Login</h1>\r\n            <form id=\"login-form\" onSubmit={handleLogin}>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\" id=\"email\" name=\"email\" required />\r\n                \r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" required />\r\n                \r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function handleLogin(event) {\r\n    event.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:5000/api/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n        const data = await response.json();\r\n        console.log('Login successful:', data);\r\n    } catch (error) {\r\n        console.error('Login failed:', error);\r\n    }\r\n}\r\n\r\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EACb,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBN,OAAA;MAAMO,EAAE,EAAC,YAAY;MAACC,QAAQ,EAAEC,WAAY;MAAAP,QAAA,gBACxCF,OAAA;QAAOU,OAAO,EAAC,OAAO;QAAAR,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCN,OAAA;QAAOW,IAAI,EAAC,OAAO;QAACJ,EAAE,EAAC,OAAO;QAACK,IAAI,EAAC,OAAO;QAACC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEvDN,OAAA;QAAOU,OAAO,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CN,OAAA;QAAOW,IAAI,EAAC,UAAU;QAACJ,EAAE,EAAC,UAAU;QAACK,IAAI,EAAC,UAAU;QAACC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhEN,OAAA;QAAQW,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACQ,EAAA,GAfQb,KAAK;AAiBd,eAAeQ,WAAWA,CAACM,KAAK,EAAE;EAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;EACpD,MAAMC,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;EAE1D,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,KAAK;QAAEI;MAAS,CAAC;IAC5C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;EAC1C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;EACzC;AACJ;AAEA,eAAehC,KAAK;AAAC,IAAAa,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}